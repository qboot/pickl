<?php

namespace Pickl\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * FavoriteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FavoriteRepository extends EntityRepository
{
    public function findFav($idUser, $idProject)
    {
        $qb = $this->createQueryBuilder('f');

        $qb
            ->leftJoin('f.user', 'user')
                ->addSelect('user')
            ->leftJoin('f.project', 'project')
                ->addSelect('project')
            ->where('project.id = :idp')
                ->setParameter('idp', $idProject)
            ->andWhere('user.id = :idu')
                ->setParameter('idu', $idUser);

        return $qb
            ->getQuery()
            ->getOneOrNullResult();
    }

    public function findFavsOfUser($username, $page, $nbPerPage) {
        $qb = $this->createQueryBuilder('f');

        $query = $qb
            ->leftJoin('f.user', 'u')
                ->addSelect('u')
            ->leftJoin('f.project', 'p')
                ->addSelect('p')
            ->where('u.username = :username')
                ->setParameter('username', $username)
            ->orderBy('f.date', 'DESC')
        ;

        $query
            ->setFirstResult(($page - 1) * $nbPerPage)
            ->setMaxResults($nbPerPage);

        return new Paginator($query, true);
    }

    public function findFavsOfUserWithLimit($username, $limit) {
        $qb = $this->createQueryBuilder('f');

        $qb
            ->leftJoin('f.user', 'u')
            ->addSelect('u')
            ->leftJoin('f.project', 'p')
            ->addSelect('p')
            ->where('u.username = :username')
            ->setParameter('username', $username)
            ->orderBy('f.date', 'DESC')
            ->setMaxResults($limit)
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
}
